{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alma Project\\\\almabetter backend project\\\\Frontend\\\\src\\\\Context\\\\BsState.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BsContext from \"./BsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BsState = props => {\n  _s();\n  const [time, changeTime] = useState(\"\");\n  const [movie, changeMovie] = useState(\"\");\n  const [lastBookingDatas, setrLastBookingData] = useState(null);\n  const [noOfSeat, changeNoOfSeats] = useState({\n    A1: 0,\n    A2: 0,\n    A3: 0,\n    A4: 0,\n    D1: 0,\n    D2: 0\n  });\n  const handlePostBooking = async () => {\n    try {\n      const res = await fetch(`https://bookmyshow-backend-main.onrender.com/api/booking`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          movie: movie,\n          slot: time,\n          seats: noOfSeat\n        })\n      });\n      const data = await res.json();\n      if (res.status === 200) {\n        changeTime(\"\");\n        changeMovie(\"\");\n        changeNoOfSeats({\n          A1: 0,\n          A2: 0,\n          A3: 0,\n          A4: 0,\n          D1: 0,\n          D2: 0\n        });\n        setLastBookingData(data.data);\n        //clearing the local storage when booking is successfull\n        window.localStorage.clear();\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n      return false;\n    }\n  };\n  useEffect(() => {\n    const movie = window.localStorage.getItem(\"movie\");\n    const slot = window.localStorage.getItem(\"slot\");\n    const seats = JSON.parse(window.localStorage.getItem(\"seats\"));\n    if (movie || slot || seats) {\n      changeMovie(movie);\n      changeTime(slot);\n      changeNoOfSeats(seats);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BsContext.Provider, {\n    value: {\n      handlePostBooking,\n      movie,\n      changeMovie,\n      time,\n      changeTime,\n      noOfSeat,\n      changeNoOfSeats,\n      lastBookingDatas\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(BsState, \"5GG6VqFBNnLwIkAGwhCNcdZRQBA=\");\n_c = BsState;\nexport default BsState;\nvar _c;\n$RefreshReg$(_c, \"BsState\");","map":{"version":3,"names":["React","useState","useEffect","BsContext","jsxDEV","_jsxDEV","BsState","props","_s","time","changeTime","movie","changeMovie","lastBookingDatas","setrLastBookingData","noOfSeat","changeNoOfSeats","A1","A2","A3","A4","D1","D2","handlePostBooking","res","fetch","method","headers","body","JSON","stringify","slot","seats","data","json","status","setLastBookingData","window","localStorage","clear","error","console","log","getItem","parse","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Alma Project/almabetter backend project/Frontend/src/Context/BsState.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport BsContext from \"./BsContext\";\r\n\r\nconst BsState = (props) =>{\r\n    const [time , changeTime] = useState(\"\");\r\n    const [movie,changeMovie] = useState(\"\");\r\n    const [lastBookingDatas , setrLastBookingData] = useState(null);\r\n    const [noOfSeat , changeNoOfSeats] = useState({\r\n        A1: 0,\r\n        A2: 0,\r\n        A3: 0,\r\n        A4: 0,\r\n        D1: 0,\r\n        D2: 0,\r\n    });\r\n\r\n    const handlePostBooking = async()=>{\r\n        try{\r\n            const res = await fetch(\r\n                `https://bookmyshow-backend-main.onrender.com/api/booking`,\r\n                {\r\n                    method : \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\":\"application/json\",\r\n                    },\r\n                    body: JSON.stringify({movie:movie, slot:time , seats:noOfSeat }),\r\n                }\r\n            );\r\n            const data = await res.json();\r\n            if (res.status === 200){\r\n                changeTime(\"\");\r\n                changeMovie(\"\");\r\n                changeNoOfSeats({\r\n                  A1: 0,\r\n                  A2: 0,\r\n                  A3: 0,\r\n                  A4: 0,\r\n                  D1: 0,\r\n                  D2: 0,\r\n                });\r\n                setLastBookingData(data.data);\r\n                //clearing the local storage when booking is successfull\r\n                window.localStorage.clear();\r\n            }\r\n        } catch(error) {\r\n            console.log(\"error\",error);\r\n            return false\r\n        }\r\n    }; \r\n    useEffect(()=>{\r\n        const movie = window.localStorage.getItem(\"movie\");\r\n        const slot = window.localStorage.getItem(\"slot\");\r\n        const seats = JSON.parse(window.localStorage.getItem(\"seats\"));\r\n\r\n        if(movie || slot || seats){\r\n            changeMovie(movie);\r\n            changeTime(slot);\r\n            changeNoOfSeats(seats);\r\n        }\r\n    },[]);\r\n\r\n    return(\r\n        <BsContext.Provider \r\n        value={{\r\n          handlePostBooking,\r\n          movie,\r\n          changeMovie,\r\n          time,\r\n          changeTime,\r\n          noOfSeat,\r\n          changeNoOfSeats,\r\n          lastBookingDatas,\r\n        }}>\r\n        {props.children}\r\n      </BsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default BsState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}